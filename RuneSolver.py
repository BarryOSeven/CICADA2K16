# CICADA2K16
#!/usr/local/bin/python
# coding=utf-8

from collections import namedtuple
Runeset = namedtuple("Runeset", "Icon English Gematria Shift")
F = Runeset(Icon = u'ᚠ', English = "F", Gematria = 2, Shift = 0)
U = Runeset(Icon = u'ᚢ', English = "U", Gematria = 3, Shift = 1)
TH = Runeset(Icon = u'ᚦ', English = "TH", Gematria = 5, Shift = 2)
O = Runeset(Icon = u'ᚩ', English = "O", Gematria = 7, Shift = 3)
R = Runeset(Icon = u'ᚱ', English = "R", Gematria = 11, Shift = 4)
CK = Runeset(Icon = u'ᚳ', English = "CK", Gematria = 13, Shift = 5)
G = Runeset(Icon = u'ᚷ', English = "G", Gematria = 17, Shift = 6)
W = Runeset(Icon = u'ᚹ', English = "W", Gematria = 19, Shift = 7)
H = Runeset(Icon = u'ᚻ', English = "H", Gematria = 23, Shift = 8)
N = Runeset(Icon = u'ᚾ', English = "N", Gematria = 29, Shift = 9)
I = Runeset(Icon = u'ᛁ', English = "I", Gematria = 31, Shift = 10)
J = Runeset(Icon = u'ᛂ', English = "J", Gematria = 37, Shift = 11)
EO = Runeset(Icon = u'ᛇ', English = "EO", Gematria = 41, Shift = 12)
P = Runeset(Icon = u'ᛈ', English = "P", Gematria = 43, Shift = 13)#u'ᛈ'
X = Runeset(Icon = u'ᛉ', English = "X", Gematria = 47, Shift = 14)
S = Runeset(Icon = u'ᛋ', English = "S", Gematria = 53, Shift = 15)
T = Runeset(Icon = u'ᛏ', English = "T", Gematria = 59, Shift = 16)
B = Runeset(Icon = u'ᛒ', English = "B", Gematria = 61, Shift = 17)
E = Runeset(Icon = u'ᛖ', English = "E", Gematria = 67, Shift = 18)
M = Runeset(Icon = u'ᛗ', English = "M", Gematria = 71, Shift = 19)
L = Runeset(Icon = u'ᛚ', English = "L", Gematria = 73, Shift = 20)
NG = Runeset(Icon = u'ᛝ', English = "NG", Gematria = 79, Shift = 21)
OE = Runeset(Icon = u'ᛟ', English = "OE", Gematria = 83, Shift = 22)
D = Runeset(Icon = u'ᛞ', English = "D", Gematria = 89, Shift = 23)
A = Runeset(Icon = u'ᚪ', English = "A", Gematria = 97, Shift = 24)
AE = Runeset(Icon = u'ᚫ', English = "AE", Gematria = 101, Shift = 25)
Y = Runeset(Icon = u'ᚣ', English = "Y", Gematria = 103, Shift = 26)
IA = Runeset(Icon = u'ᛡ', English = "IA", Gematria = 107, Shift = 27)
EA = Runeset(Icon = u'ᛠ', English = "EA", Gematria = 109, Shift = 28)
SPACE = Runeset(Icon = u'•', English = " ", Gematria = 0, Shift = 30)

runelist = [F, U, TH, O, R, CK, G, W, H, N, I, J, EO, P, X, S, T, B, E, M, L, NG, OE, D, A, AE, Y, IA, EA]


Page0 = "ᚪ•ᛗᛝᛞᛡᚦᛉᛁᛗ•ᛡᛞᛈᛝᚢᚹᚪᛗ•ᛏᚪ\nᛝ•ᛝᚦᛡᚹᛋᚻ•ᛁᚳ•ᚫᛈᚫᚷᚩ•ᛗᛁᚪ•ᛖᚩ•ᛏᚹ\nᚩ•ᚠᚣᚢᛏᛂ•ᚦᛂᛠᛖᚳᚾᛠ•ᚳᛠᛖ•ᚱ\nᚩᚢᛉ•ᛞᚹᚻᛒᛝᚠᚪᚳᛂᚢ•ᚩᛂᛡᛠᛁᛚᚷᚻ•ᛒᚢ\nᛂ•ᛉᚪᚳᚹᛡ•ᛗᚩᛈᚣᛞᛡᛚᛈ•ᛇᛁᚦᚱ•ᚣᚷᛗ•ᛉ\nᛟᚷᛋ•ᛗᛈᛂᛟᛞ•ᛟᛏᛡᛟ•ᛏᛝᛁ•ᛗᛝᚣᚪᚫ•ᛝ•ᚱ\nᚣᛂ•ᚾᛚᚢᛉᛒ•ᚻᛈᛂᚩᛠ•ᚷᚫᚹ•ᛉᛋᛞᚳ•ᚢᛏ•\nᛟᚻᛇᚾᛈᛏ•ᛠᚣᛒᚢᚷ•ᚷᚪᛇ•ᚾᚷᚩᛖᛚᛗᛒᚦ•ᚣ\nᛡᛟᛇᚣ•ᛗᚳᛟᚦ•ᛖᛚᚱᛇᛈᚱᛞᚣ•ᛉᛞ•ᛝᚣᛈ•\nᛋᛖᛉᚹ•ᚳᚷᚠᛞᚱᛖ•ᛞᛖᚹᚩᛇᛟ•ᚻᚩᛟ•ᛒᛋ•ᚻ\nᛠᚪᚳᛁᛗᛉᛂᛗᛖ•ᛗᛚ•ᚷᚩᛏᚦᛉᛖᛠᚱᚷᚣ"
Page1 = ""
Page2 = ""
Page3 = ""
Page4 = ""
Page5 = ""
Page6 = ""
Page7 = ""
Page8 = ""
Page9 = ""
Page10 = ""
Page11 = ""
Page12 = ""
Page13 = ""
Page14 = ""
Page15 = ""
Page16 = ""
Page17 = ""
Page18 = ""
Page19 = ""
Page20 = ""
Page21 = ""
Page22 = ""
Page23 = ""
Page24 = ""
Page25 = ""
Page26 = ""
Page27 = "ᛗᛈᚣ•ᛚᛋᚩᚪᚫᚻᛚᛖᛇᛁᛗᛚ•ᛚᛋᚳᛈ:ᚾᚻᚷᚢᛡᚻᚢ•ᛒᚠ•ᛞᛂᚢ•ᛒᛖᛁ•ᚫᚠ•ᛈ•ᚫᛈᚦ•ᚱᛗᛚᚳ•ᛒᚷᚣᛗᛠᛒᚫ•ᚾᚦ•ᛗᚠᛡᛠᚳᛒᚷᚫᚠ•ᛖᛂᚱᚩ•ᛈᛒ•ᚠᛒᚩ•ᛇᚱᛠᚱ•ᛠᚷᛖᛚ•ᛇᚱᚾᛋᚩᚩᚳᚪᛖᚣᛖᛖ•ᛏᚱ•ᚢᚣ•ᛟᛂᛉ•ᛠᚷᛝ•ᚣᛏᛝᚾ•ᚪᛏᛋ•ᛝᚪᛂ•ᚠᛚᛋᚢ•ᚹᛠᛈᛁᛏ•ᛁᚾ•ᚱᚱᛝᛗ•ᚣᛗᚠᛁᚫᛁᚪ•ᚢᛟᛒᚹ•ᛗᛁᚻᚣᚹᛞᛚ.ᛟᛏᛞ•ᛟᚳᛒ•ᛡᛒ•ᚪᛏ•ᚹᛏᛈ•ᚹᛠᚩᚱᚩᛖ•ᚣᛚᛋ.ᚢᛡᚱᚠᛂᛇᚱᛡᚦᛖᚢᛏ•ᛝᚫ•ᚾᚪᛠᚩᚪᚾᚪᚦᚷᚩ•ᚫᛉᛒᛏᛖᛠᛗᚷᚱᛗ•ᚣᛝᚠᛒ•ᛞᛟᛞᚪ•ᛠᚱᚳᛁᛈᛞᚠᛗᛝᚻ•ᛋᚩ•ᛞᛈᛉᚾ•ᛟᚱᛡᚾᚳᚳᛏ•ᚾᛈᚠ"
Page28 = "ᛈᚳ•ᛂᚦᛒᛁᚹ•ᛞᚹᛝᛠᛡᚹᛚ•ᚹᛂᚾᚪᛟ•ᛏᛞᛉᚣᛖᚱᛞ•ᚱᛏᛇᛁᚳᛈ•ᛝ•ᚦᛟᚷᛂᚦ•ᚣᛋ•ᛠᚻ•ᚠᛒᛚ•ᛁᚫᛚᛞᛉᚪ•ᛁᚹᚷ•ᛒᚩᚹᚾᛠ•ᛋᛖᛗᛒᛋ•ᚳᚹᚦᛟᚠᚻᚫ•ᛞᚢᛁᛒᛞ•ᛇᛝᛈᚠᛁ•ᛟᚢᚣᛏ•ᚻᚱᛖᚾᚳᛈᛡᛈᛞᛂ•ᛁᛏᛗᛋᚫᛉᚩᚣ•ᚪᛂᛗᛡᛖ•ᛇᛂᚠᛗᚱ.ᛞᛟᚪᛒᛞᚻ•ᚾᛈᚪ•ᛇᚱᚻᚾᛝᛠᚠᚾᚠ•ᚩᛗᛋᚾ•ᛠᚪᛁᚢᛚ•ᚪᚫ•ᛂᛉᛡᚠ•ᛁᛖᛈᛠᚻ•ᚠᛇᚩᚹ•ᛠᛂᛇᛁᛠᚫ•ᛂᛒ•ᛋ•ᚠᛖᚷ•ᛋᛁ•ᛟᛗᛒᛁᛝᛏᚪᚢᛁᚦ•ᚩᛝᛗᚠ•ᚹᛟᛒᛟᛡ•ᚠᚣᛝᚩᛠ•ᚳᛚᛈᚱ•ᛞᛂᚩᛝᛂ•ᚪᛖᛗᛈᚾ•ᚠᛠᚷᛞᛒ•ᚩᛉᚷᚾᚣᚷ•ᛠᛈᛂᛞᚾᛟᚩᚢᚾᚹᛗ.ᛂ•ᚢᚷᛠ•ᛗ•ᛇᚪ.ᚻᚦᛡ•ᛝᛈᛞᛒ•ᚳᛉᚳ•ᛠᛉ•ᛟᚣ•ᛒᚦᛁᛂᛚᛡᛝᛡ•ᚹᛂᚫ•ᛋᛗᚪᛡᛠᛇᛝᛏ•"
Page29 = "ᚦᛞᚷ•ᚢᛏᛚᛏᚣ•ᚢᛝ•ᚷᛟᚪᛏ•ᛂᚦᚣ•ᚫᚻᚪ•ᛒᛝ•ᚦᚢᚱᚪᚾᛞ•ᛁᛝᚫ•ᛚᚫᚷ•ᚹᛁᛒᚣ•ᚾᚫᚠ•ᛚᛋᛒ•ᛈᛟᚪᛟᛞᚷᛟᚣᛉᚷᛚ•ᛋᛠᛁ.ᚳᛟᛁᚦᛈᚹᛉ•ᛖᚢ•ᛟᛂᛝᛋᚢᛝ•ᚳᛡᛠ.ᛚᛇ•ᛚᚷᚢᛁᛏᛒᛋ•ᛞᛁ•ᚠᚠᚷᚠ•ᚦᛂᚳ•ᚫᛟ•ᛁᛗᛡᛁᛇᚦ•ᚩ•ᚢᛈᛒ•ᚻᛋ•ᛂᚣᛂᛖ.ᛒᛇᛇᚱ•ᚹᛂᛏᛡ•ᚳᚪᚫ.ᚩᛈᚱ•ᛡᚾᛗᛁᛝ•ᚻᚹᚦ•ᛡᚦᚻᚦ•ᛉᚫᚫᛋᚳᛡᚾᛇ•ᛟᛉᚢ•ᚱᛂᛖ•ᛚᚾᛞ•ᛗ•ᛏᚱᛟᚦ•ᛁᛝᛡᛒ•ᚳᚩᚹᛟ•ᛏᛗᛋᚱᚷ•ᚱᛚᛞᛚ•ᚩᚣ•ᛞᚳᚪᛖᛞᚠᚳ•ᛇᛖᛉᛚᚫ•ᛖᚩᛁᛋ•ᛡᛁᛟᛋᚪᛒᛗ•ᛗᚣᚹᛂ•ᛖᚫᛝᛚ•ᛂᚱᛇ•ᛈᛚᚩᚻ•ᚪᛞ•ᛡᛂ•ᛞᚠᚹᛞᛂᚳ•ᚾᚦᛉ•ᛂᚻ•ᚷᛚ•ᚠᛖᚦ•ᛇᚻ•ᛝᛖᛒᛚᛞᛁᛗᚠ•ᚹᛒᛗᛟᛁᛖᛁᛠ•ᛈᚻᛝᛖᛞᛟᚩᚻᛂ•ᚹᚩᚾᛂᛈᛗ•ᛖᚳ•ᛖᛇ•ᚷᚻᛗ"
Page30 = "ᛞᚪᛈᛖ•ᛗ•ᛉᚫᛒᛇᚱ•ᛖᚣᛟᚣ•ᚱᛠᛈᚢᛠ•ᚣᛖᚪᚻ•ᚩᛉᛠᚢᚻᛡᛟ•ᚷᚫᚩᛒᛉ•ᚫᚱᛞᛋᚩᚱ•ᚷᛠ•ᛉᚻᛁ•ᚷᚳᛞᛠᛡᚳ•ᛂᛠᛉᛇᚻᛋᚹ•ᛝᛡᚷᛖᛡᚣ•ᛠᚩᚷ•ᚱᚦᚠᛟᚩᚦ•ᚦᛁᛏᚱ•ᛇᛉᛇ•ᚢᚷᛠ•ᛟᛏ•ᚩᚠᛚ•ᛟᛝᛈ•ᚱᛡᚪᚩᛏ•ᚩᛠᚷᚫᛗ•ᛈᛋᚱ•ᛖᚦᚠ•ᛞᚹᚾᛚ•ᛝᚩᛇᛂ•ᚳᛚᚢᚹᛏ•ᚩᛖᛏᚠᚪᛚ•ᛟᛇᛟ•ᛠᚱᛇ•ᚢᚪᚦᛈᛟᛡᛉ.ᛡᛒᚱᛒᚠᚢᛚᚢᛟ•ᛒᛇᛒ•ᛉᚦᚹ•ᛝᚣᛖ•ᚳᚫᚣᛟ•ᚹᛁᛝᚫᛏ•ᚫᛇᛈᛡᛟᚠ•ᛚ•ᛝᚠᛡ.ᛞᚪᛚᛈ•ᛋᛁ•ᚢᚣᚪᛚᛠᛝᚹ•ᚪᛏᛈᚳᚣ•ᛝᚫᚻᛗᛞᚷᛚ.ᛠᛉᛒ•ᛇᛡᛋᛖ•ᚣᛁᛚ•ᚣᛠᚣ•ᚻ.ᚣᛉᚾᛏᚫᛉᛋᚦᚪᚹᛗ•ᚪᚱ•ᚪᚩᚻ.ᛗᛖᚫᛞᛠᛁᛗ•ᛒᛟᚾᚳᚩᚱᛉ•ᛋᚹᚫ•ᚻᛖ•ᛋᚠᚾ•ᚢᚦᛟᚷᛖᚪᛟᛇᛇ•"
Page31 = "ᚦᚳᛒᛝᛏᛉᛡᛞ•ᛋᛡ•ᚩᚠ.ᛈᛖᛞᛋᛁ•ᛚᛁᚻᚾᛝᚱ•ᚻᛈ•ᛇᚢᚫᛞ•ᛚᚻᛉᚳᛈ•ᛁᛗᛉᚳ.ᛂᚫᚾᛞᛋ•ᛏᛚᛡᚩᛋᛗ•ᛚᛞᚾ•ᛈᚫᛏᚷᛈ•ᚫᚦᛂᛗ•ᛒᚻᚩᚻᛁᚷᚻᚳ•ᛚᚹᛋᚱᛇᛗᛏ•ᛂᚳᛁ•ᛠᚦᛞ•ᛏᛚ•ᚱᛖᛠᛒᚪ•ᛒᚠᛒ•ᛁᛒᛡᛇᛏᚣ•ᛏᛖᚣᚳᚱᛋᚠ•ᛁᚦᚪᛉ•ᚪᚣᚫᛠ•ᛂ•ᛈᛗ•ᚠᛋ•ᚪᛒᚱ.ᛉᚣᚻ•ᚦᚩ•ᛇᛞᚢ.ᚠᛁ•ᚻᚩᚫᚠᚣᚷᚱᚪᛂ•ᛏᛉᛇ•ᛖᛠᛞ•ᛏᚠᚢᛝ•ᚫᛂᛖᛈᚳᛒᚦᚢᛝ•ᛡᛒᚹᚱ•ᛖᚾᛈᛇᚣᛇ•ᛉᚱᚹ•ᛒᛡᛞ•ᛖᚱᚩᚻᚣᛠᛈᚦ•ᛗᛁᚷᛚ•ᚹᛉᚫ.ᚠᛞᚾ•ᛂᛟ•ᚻᛚᛡ•ᛗᛖᚷ•ᛟᛁᛡ•ᚻᛟᚱᛇᚹᚣᚠ•ᛈ•ᛂᚷᚦ•ᚪᛒᛝ•ᛈᛒᚪᛖ•ᚢᚹᚻᚩᛒᛋᛉ•ᚹᛞ.ᚦᛇᚱᛖ•ᛂᚾᛞᛝᚹᚪ•ᚻᛖᚹ•ᛟᛡᛂᛡᛟᛝᛂᛉᛚᛂ•ᛞᛉᛟᛈ•ᚱᚪᛁᛏᚷᛉᛝᛇ•ᛠᛗᚩ"
Page32 = "ᛚ•ᚦᚫᚹ•ᚫᚢᛈᛡᚳ•ᚹᛝᚻᚹᛒᛗᛋᛟᛖᛁᛡ•ᛟᚹᚦᚻᛒ•ᛡᚱᛏᚦᚠ•ᚠᚩᚦ.ᚻᚩᛗᛖᛉᚹᛞᛋᛚᚠᛞ•ᛝᛒᛇᛡᛚᚪ•ᚹᛞᚾᚫᛉᛏᚣᛗᚷ•ᚦᚹᛉᛡᚦ•ᚹᛒᛋᚱᛉᛡᛉᚪ•ᚢᛒᚻᛠ•ᚹᛝᚢᚻᛇᛝᛡᛠᛂ•ᛋᛈᚦᛏ•ᛟᛝᚩᛗᛒᚢᛞᛋ•ᛒᛂ•ᛠᚱᛟ•ᛖᚾ•ᚾᚹᚷᚢᛚᚪᚩᚣ•ᚢᛏᚠᛂᛏ•ᚪᚷᛒᛇ:"
Page33 = ""
Page34 = ""
Page35 = ""
Page36 = ""
Page37 = ""
Page38 = ""
Page39 = ""
Page40 = "ᚠᚾᛗ•ᚣᚷᛞᚫᚻ•ᚪᛈᛉᚣᚻ•ᛇᛠᚩᛖ•ᛏᛝᛠ•ᛚᛁᛏᚦᚠ•ᛗᚪᚳᛖ.ᛞᚳ•ᛏᚱᛟᚷᛠᚾᚫᛒᚢᛖᛒᚢ•ᚦᚠᛟ•ᚷᛋᛟ•ᛁᛈ•ᛟᛉᛋᛒ•ᚹᛂᛒᚣᛗᚢᛠ•ᚱᛁᚢᛟᛂᛁ•ᛗᛖᚫ•ᚱᛋᛉᛝ.ᛠᛈᛚ•ᛞᚩᛚᛁᛉᛠᛝᛖᚱ•ᚾᛈᛖᚹᛡ•ᚾᛂᛏᚣ.ᛋᚩᛋᛏᛝ•ᚢᚾᛇᚪ•ᛖᛏᚪᛂᚳᚣ•ᛟᛒ•ᛚᛋ•ᛒᛞᛂ•ᛁᛝᚣᛖᚳ•ᛂᚻᛚᚣ•ᚷᚫᛚᛞ•ᛚᚫᛚᚦᛉ•ᛚ•ᛖᛉᚩᛉᛁᚳᚢᛗᚾᚢ•ᚩᚾᛇ•ᚻᛡᛚᛇᚩᚫᚪ•ᚩᛟᚩ•ᚣᚱ•ᛖᚠᚢ.ᛁᚻ•ᛟᛚᚾᛏ•ᚠᛞᚱᛠᚷ•ᛈᚩᛇᚩᛗᛠᛒ•ᛂᛡ•ᛋᛗᚠ•ᛏᚠᚫᚩ•ᛟᚳᛚᛞᛡᛚ•ᚩᚳᛝᚢ•ᛈᚹᛏ•ᚷᚳᛋ•ᚢᛟᚷᚦ•ᚠᛉᚠᛏ•ᚳᛋᛉᛟ•ᚷᚠᛉᚾᛞ•ᛒᛏᛠᛡ.ᛈᛡ"
Page41 = "ᛠᛁᚪ•ᛋᚣᛗᛞᚣᛋ•ᛒᛞᛂᛞ.ᚩᚾᛏᛚ•ᚳᚪᛝ•ᚱᚷᚻᚷ•ᛂᚹᚠ•ᚪᚢᛇ•ᛞᛏᛗᛂᛁ•ᛝᚫ•ᛉᛈᚳᛈᛠ•ᛟᚪᛒᛁᛁᛋ•ᛇᚷᚻᛋ•ᛇᛡᛒ•ᚠᚹᛝ•ᚫᚪᚠᚩᚣᛡᚪᚾᚻ•ᛒᚦᛟᛇᚣᛟᛁᛒ•ᛟ•ᚩᛋᚹ•ᛞᚳᚠᚪᛁ.ᛉᛏᛟᚢᚩᛟᚦᛈᛋᚩ•ᚻᛇᚦᛝ•ᛏᛠᚠᛝᛠ•ᚩᛗ•ᛏᚠᚣᛚᚣ•ᚹᛚᛞ•ᚪᛉᛠ•ᚪᛂ•ᚩᛋᛒᛚ•ᚳᛖᚾᚪᚩᚱᛏᚦ•ᚱᛒᚳᚣ•ᛠᛗᚹᛚ•ᚻᛈ•ᛇᛈᛖ•ᛚᛂᚩᛡᚪ•ᛖᛋᚫᚩ•ᛠᛉᛝᚣ•ᛖᚫᛒᛗ•ᛖᚻᚱ•ᛈᚾᛗ•ᚹᛏᛟᚣᚢ•ᚠᛉᛈᛗᚩᚷᚾ•ᛡᛇᚳᚠᛒᛈᛗ•ᛋᛇᛁ•ᛖᛈᚢᚱᛏᚳᚣ•ᛂᛚᚠ.ᚱᛚᚱᚫᛖᚻᛟ•ᛇᚣᛡ•ᚩᛉ•ᚪᛋᚣᛁᛝ•ᛉᛚᛂ'ᚳ•ᛖᚣᚢᛝᚦᛇᚱ•ᛠᛁᚫ•ᚦᚠᛟᚷᛠᛁ•ᛈᛋᛒ•ᛗᛒᛂᚠᚾᚳᛖ•ᚻᚫᚩᛂ•ᛉᛂᛚᛈᚪᛁ•ᛟᚹᚱᛁᚱᚦᛖᛉ•ᚪᚾ•ᛞᛂᚷ•ᛟᛟᚳᛏᛂ"
Page42 = "ᛞ•ᛉᚾᛗᚦ•ᛁᛂᚱ•ᛈᛉᚢᚫᚦᛒᚠᛂᚦ•ᚠᚪᛝᛖ•ᚹᚹᚣᛚᛇ•ᚢᚣ•ᚾᚱᚪ•ᛈᚾᚹ•ᛚᚾᛏᛚᚢᛒᚱᛝᚪᛋ•ᚫᛈ•ᛂᛚᚢᚳᚷ•ᛚᛏᛂᚹᛈ•ᚫᛗᛚ•ᛉᛚᛗᛏᛞᚠᛈᛁ.'ᚠᚳᚦᛗᛂᚹᚱᚪᛚ•ᚩᛝᚱᚢᛈᚱᛟᛡ•ᚳᛉᚱ•ᛇᛏᚦᚾ•ᚱᛇᚫᛞᛟᚻ•ᛒᚾᚣ•ᚠᛡᚪᛡᛖᚫᛞᛂᚢᛖ•ᚦᚱ•ᚩᛇᚱᛡ•ᚣᛁᛉᛇᚻᚩᛠ•ᚫᚻᛡᛝᛠᚦ•ᚾᚣ•ᚾᚠᛁᛝ'.'ᛏᚻᚹᚫ•ᛒᛇ•ᛡᚻᛉᛒ•ᛞᛝᚱᛂᚦᚻ•ᚪᚷᚣᛁᚠᚷ•ᛁᛏᛞᛠᛒᚠᚩᛈ•ᛇᛡᛟᚹᚱᚾᚩᛏ•ᛋᚹᚢ.ᛖᛡᛖᛡᚦ•ᛉᚪᚷᛈᚾ•ᛋᚱᚠᛞᛝᚻᛖᛂᛞ•ᛂᛡ•ᚱᚹ•ᚷᛝᚪᛒ•ᛂᛈᛂ•ᛏᚠᛉ•ᚪᛂ•ᛁᚠᛉᚢᚩᚣᚻᚦ•ᚻᚾᛁᛒ•ᛡᛟᛡᛋᛈᚣᛉ•ᛠᚢᛠᛚ•ᚠᛝᛗᚻ•ᚦᛒᚩ•ᛗᛚ•ᚩᛠᛋᚦᛠ•ᛇᛋᛉ•ᚠᛗᛒ•ᚫᛋᛇᚾᛡᚾ•ᚢᚫᚹ•ᛞᛠᚢᚾᛝᚠᚾᛖᚫ"
Page43 = "ᚻᛂ•ᛁᛖᛏᛡ•ᚷᛁᚩᚾ•ᚳᚢᚫᛗᛈᛋᚪᛡ•ᚷᛚᚣᚹᛟ'•ᚠᚢ•ᛉᚠᚫᛞᚠᛡᛂᚾ.ᚻᛋᚦᚠ•ᛏᚠᛂᚱᚹᚠᛋᚾᚹᛂᛖᛒᚢᚦ•ᚩᛇᚫᛈ•ᛡᛟ.ᚢᛁᚩᛂᚩᛇᛟᛂᛞᚩ•ᛈᚹᛞᚷᚱ•ᚠᛟ•ᛇᚷ•ᛂᛟᛇᚫᛋᚫᚣ•ᛒᛏᛞᛟ•ᛠᚻᛡᚱᛠᛠᛉᛋ•ᚠᚾᚣᚱᚠ.ᚪᚾᛡᚪᛖᚫ•ᚳᛇᛁᛝ•ᛒᛡᛞᛠᚫᛒᛠᚳᛉᚠ•ᚫᛏᛁᚱᚪᛗᚩ•ᛚᛉᛋᚪ•ᛒᚩᛈᚫᚩᛝᚻᛇᛖᛇᚫ•ᚻᛖᛇᛠ•ᚱᛗᛞ•ᚫᛇᛗ.ᚾᚾᚣᛡ•ᚱᚾᛗᛠ•ᛂᛉᛋᛂ•ᛟᛖᛒ•ᛏᚻᚾ•ᚠᚪᚠ•ᛒᚾ•ᚩᚾ•ᛖᛋᛏᛒᚹᛡ.ᚻᛏ•ᚩᛟᚩ•ᛒᚾᛖᚳᛁᚹᚣᛟ•ᛟᚩᛒ•ᛋᛖᚩ•ᚫᚻᛟᚠᚫᚷᚩᛂ•ᛟᛒᚻ•ᚳᛖᛁᛚᚫᚣᛚ•ᚢᛚᛁ•ᚾᛟᛏ•ᚫᛈᛟᛈᛝᛗ•ᚳᚢᛁ•ᚣᛋᚳᚢᛡᛇᚩ•ᚠᛖ•ᚷᛟ•ᚻᚫ•ᛝᚠ•ᛗᚠᛝᛉᛞᛁ•ᛗᛝᚣᚪᛝᚠᛉᛁᛟᚷᛚ•ᛇᚩ•ᚫᛡᛏ•ᛂᛏ"
Page44 = "ᛠᚢ•ᚷᚦᚣ•ᚦᚾᛟᚣᚩᛖᚻ•ᛁᛋᛖᚣᚦᚪᛡᛝᛟᛇᛚ•ᛡᛏᛝ•ᛁᛚ•ᚠᛉᛡᛠᛏ•ᚠᚾᛂᚠᚻᚳ•ᚻᛞᛠᚣᛟᛝ•ᛉᛇᚻᚩᛋᚻ.ᛇᛏᚠ•ᛚᚱᛇᚦᚪᛁᛁ•ᛒᚠᛁᛚ•ᛂᛡᛒᚣᛗᚫᚫ•ᛞᚻᛟ•ᚪᚹᛉᛚᛏᛁᚪ•ᛟᛞᛖᚾᛈᚻᚣ•ᚦᛚᛖᛋᛖᛟᚫᛖ•ᛏᚱᚪ•ᛁᚫᚹᚫ•ᛋᛈᚱ•ᛂᛡᚪᛏ•ᚫᚦ•ᚠᛠᚢᛈᚣᚫᛝ•ᚣᚾᚻᛡ•ᚳᛗᚠᚾ•ᛞᛂ•ᛖᚩ•ᛒᚷᚻᚪ•ᛖᛞᛟᚠᛇᛞᛟ•ᛈᚳᛁᚪᛒᚷᛒᛈᛟ•ᛟᛂᚠᚪᛖ•ᛂᚣᚩᛂ•ᚣ•ᚫᛋ•ᚦᛁᚫᛂᚫᛏ•ᛖᛇᚻᛟ•ᚣᚠᚹᛞᚷ.ᛡᚱᛒᚢ•ᛒᛚᚢ•ᚷᛈᛂᚪ•ᛏᛡ•ᚳᛂᚠᛡᛝᛚᚣᛒ•ᛗᚻ•ᚱᛚᛟᛠᛋᚦᛝ•ᛏᚳᛟᛉᛁ•ᛂᚱᚳᛖᛏᛂᚷ•ᛡᛈᛏᛉᚩᛁᛂᛟ•ᚷᚩᚪᚢ•ᚣᛖᚪᛋᛟᛇᚢᚪᛡ•ᛗᚱᛚᚳᚠ•ᛒᛗᛝ•ᚻᛉ•ᛠᛂᚫ•ᛉᚪᚷᚻᚣᛏᛖᛝ•ᛉᛉᛗᚾᚫᛋ•ᚱᛗᛞᛋ"
Page45 = "ᚳ•ᚦᛚᛟ•ᛝᛇᚢ•ᚻᚩ•ᛏ.ᚢᛁᚦᛂᚾᚠᚱᚦ•ᛋᛟᚷᛠᛗᚪ•ᛝᛚᚪᛁᛒᛠᚢᛋ•ᚩ•ᛖᛋᛝ•ᚠᛡᚢᛟᛞᛇᚪ•ᛞᛡᛒᚹᚩ•ᛂᛋ•ᛟᛝᛏᚳ•ᚻᚾᛇᛋ•ᛗᛚᚻᛞᛖᛈ•ᚫᛂᚱᚪᚢᚻᚱᚦᚱ•ᛟᛂ•ᛟᛗᚩᛟᛏ•ᚫᛇ•ᛉᛒᚳ•ᛂᛁ•ᚪᚩᛉ•ᚹᚪᚾᛈᛏᚢᚣ•ᛁᛒᚢ.ᚦᚩᛡ•ᛗᚳᚠᛉᚱᛁ•ᚪᛗᛏᛒ•ᛗᛚᛁᚦᛏᛠᛋᚾᚷᛚ•ᛏ•ᛇᛈ•ᚩᛚᛞ•ᛚᚹᚳᛂᚹᛉ•ᚪᛡᚹᛇ•ᛖᛖᚹ•ᛏᚪ•ᚣᚠᛉᚳ•ᛗᚩᚷᛞᚷ•ᛚᚳ•ᛒᚣᛋᚣᚠᛞᚣᛝ•ᛠᛇᛏᚩᚢᚫ•ᛟᛁᛒ•ᛏᚾᚫᚠ.ᛂᛟᛗᚾᛈ•ᛠᛡᚩᛏᛡᚪᚱᛞ•ᚪᛝᛈᚹᛗᛂᛟᛠᚩ•ᛚᚹᛉ•ᚱᛗ•ᚩᛏᚹᛂᚹᚾ•ᚷᚳᛠ•ᛂᚳᚢᚱ•ᛟᛇᛟᚾᚻᚫᛉ•ᚣᛚᚩ•ᚩᛡᚳᚻᛂ•ᛋᚣᚹᛁ•ᚣᚠᛋᚾᚪ•ᚷᛖᚾᛂᚪᚹᛠ•ᛞᚠᛟ•ᚢᛁ•ᛖᛇᚦ•ᚫᛞ•ᚳᛂ•ᚷᚢᚻᚣᚻᛁᛒᛉᚾ•ᚹᛝ"
Page46 = "ᚻᛏᛉᚫᛁᛂᚢ•ᛞᚠᛡᚫ•ᛋᛁᚹᛝᛈ•ᛗᛉᛂᛈ•ᛞᛗᛝ•ᛇᛚᛞᚣ•ᚠᚩᛞ•ᛝᚷᚾᛇ•ᚷᛖ•ᛚᛉᚣ•ᚫᛚᛖᛉ.ᛡᛝᛋ•ᚳᛁᚦ•ᚷᛏᚣ•ᚹᚩ•ᛝᛖ•ᛒᚪᛗᛏᚪᚷᛒ.ᛈᛡᛟ•ᚪᛉᛝᛒᛞᛉᛂᚦᚢ•ᛏᛇᛖ•ᚣᚪᚳ•ᛠᚦᚹ•ᛏᛉᚩᚳᛞᛒ•ᛟᚩᛠᚾᚠᚪ,ᛚᛗᛖᛁᚦᚫᚪᛡᛂᛁᚪᚱ•ᚦᚱᛖᛖᚣᛋᚾ•ᛖᛏᚢᚻᛈᚳᚦᛋ•ᚳᛇᛉᛖᛇᚠ•ᛞᛠᛏᛈ•ᚣᛇᛠᚢᛏ•ᛉᚦᚷᚻ•ᚫᚾᛠᚱ•ᛡᛒᛏᛁᛉ•ᚩᚢᛝ•ᛚᛒᛇᚩ•ᛟᛉ•ᚦᛞᚷᚠ•ᚩᚱᛈᚪᛏ•ᚫᛋᚪᚦ•ᛖᛟᚪᛝᚫ•ᚣᛒᛚ•ᛡᚦᚾᚠᛈᛟᛡᚾ•ᛖᚹ•ᛖᛗᚩ•ᛉᚹᚦᛠ•ᛁᚦᛒᛖᚱ•ᛟᚳᛉ•ᛈᛖ•ᛁᚢᚦ•ᛈᚠᛞᛈᛂ•ᛁᛟᚻ•ᛒᚦᛏᚩᚳᚢᛚ•ᛞᛂᛝ•ᚦᛂᛁᚪ•ᚹᚣ•ᚢᛝᚾ•ᛋᚾᛈᚠᚫᛒᛂᚫ•ᛡᛗᚹ•ᛇᚪᚩᚾᛂᚳᛚᛒᛉ•ᚣᛠᚦᚹ•ᛝᛚᛗᚳᛡᛇᚠᚫ"
Page47 = "ᛠᛁᚦ•ᛒᛠᛚᚦᚳᛞᛁᛇ•ᚠᚢᛉᛋᛉᛁᚦᚫᛋᛗ•ᚦᚹ.ᛈ•ᛒᛋᛏᚫᚾᚱᛁ•ᚦᛇᛡᚱᛚᛡᚹ•ᚢᚩᛋᚱ•ᚹᚫ•ᛒᚹᛡᛖᛟᛂ•ᛡᚣᛖᚩᛖᛡᚷᚫᚠᚾᚹ•ᛟᛏᚫᚠᛂᚹᛠ.ᚦᛞ•ᛁᚫᚩᚾ•ᛋᚷᛈᚪᛖᚩ•ᚣᚦᚹ•ᚾᚷ.ᛠᛋᚩᛇᛏ•ᛝᛚᚷᛞ•ᛒᛈᛈ•ᛗᛁᚪᛖ•ᛚᛏᛁ•ᚫᛂᛖ•ᛒᚾᚠᚪᛋᚷᛒᚠ•ᚫᚹᚣᚷᚢᛡᚠᛠ•ᛖᛋᛞ•ᛚᚳᛒᛞᛏᛈ•ᛖᚾᛈᚣ•ᚱᚠᚻ•ᚫᛝ•ᛟᚪᛗ•ᛒ•ᛡᛚ•ᛝᛋᚱᚢᚹᚱᚣᚻᚹ•ᚹᛡᛈ•ᛁᚻᚾᚻᚱ•ᚳᛖᛏᚫᚩᛋ•ᚣᛋ.ᛝᚫᛡᛝᚫ•ᚻᚦ•ᛇᚪᛞᛋ•ᛒᛁᚳᛈ•ᛇᛒᛟᚫ•ᛠᛝᛖ•ᛝᛠᚣ•ᛒᚣᛉᚻᚢᚠᚦᛞᚹ•ᛗᚢᛁᛡᛂᚩ•ᛋᛇᚫᛇᛝᚱ•ᛚᛇᛠ•ᛏᚩᛂ•ᚩᛝᛈ•ᚱᚻᛠᚢᛉᚦ•ᚣᚢᛋ•ᛡᛚᛖᚷᛗᛝᚹᚻᚱᛋ•ᚢᛟᚣᛠᚷᚩᚷ•ᛇᛁᛖ•ᛠᛂᛇᛁᚾᛂᚩᛗᚱᛡᛉ•ᚠᚻᚳ•ᚪᚩᚪᚫ"
Page48 = "ᚻᚳᛁᚦ•ᛂᚷ.ᛝᛖᚢ•ᛡᛏᛁ•ᛚᚩᚱᛈ.ᚠᚪ•ᛈᛞᚱᛒ•ᛝᛁᛋ•ᚷ•ᚠᚾᛈᚠᛒ•ᛟᚦᛁᛠᚪ•ᛡᛏᚾᚳ.ᚦᛟᚻᛈᛖᛚᚫ•ᛟᚠᛗ•ᛡᛝ.ᛒᛝᚦᛝᛠᚠ•ᛇᛗᛟ•ᚩᛠᛈ•ᛁᛡᚱ•ᚹᚹᛟᚩᛒᚩ•ᚾᚩᛂᛟᚾ•ᚦᛡᚠ•ᚩᛂᛞᚦᛏᛁ•ᛈᚾᚪᚱᛂ•ᛉᚱᚣ•ᛝᛡ•ᛏᛗ•ᛈᛞᚣᚻ•ᛗᛝᚫᚳᛇ.ᛡᚣᛂᛟ•ᛝᚩᚢᛇᛁᚱ•ᛏᚪ•ᚩᚻᚪᛚᚫᛚᚪ•ᛋᛈ•ᛏᚪᛂᚳᚦᚢᛏᚹᚦ•ᛗᚷᛖᛗᚣᛡᛁᛞ•ᚢᛋᚠᛒ•ᛟᛚᛟ•ᚪᛒ•ᚦᛚᚣ•ᚳᛠᚣ•ᛞᛇᛁ.ᚹᛉ•ᛟᛝᛒᚢᛋᛞᚻᛞ•ᚢ•ᛠᚱ•ᚫᚩᚻᛝᛒᚪᚹ•ᛈᛡᚾᛚᛇ•ᛖᛟᛝ•ᛡᚠᛇᛡ•ᚳᚦᚹ.ᛚᚦᚪᛁᛈ•ᛞᛟᛂ•ᚢᛉᚢᚾᛠᚠ•ᚩᚾᚪ•ᚱᛠᚷ•ᛗᚢ•ᛗᛁᛂᛒᛗᚱᚾᛗ•ᚩᚾᚠᚣ•ᛗᚠᛇᚠᛂ•ᛒᛡᛈᛂᛖᛡᛏ•ᛈᛟᚫᛏᛟ•ᚻᛖᚾ•ᚳᛇᚩ•ᛋᚻᚫᛇ•ᛝᛁᛟ•ᛇᚠᚢᛞᚣᚪᛚᚠ"
Page49 = "ᛡ•ᛖᛂ•ᚠᛚᛟ•ᛁᚳ•ᛁᛝᚷᚦ•ᛗᛋᚫᚷᚪᛠ•ᛗᛁ•ᛒᛡᛏᚾ•ᛝᛗᚦ•ᛏᚣᚫᛂ•ᛖᚻᚠᚪᛡᚷ•ᚪᛗᛁ•ᛞᛉᛏ•ᚢᛖᚦᚾ•ᛖᚪᛈᚹᛠᛚ•ᛒᚢᚱᛡᛟ•ᚪᚣ•ᛟᛇᚹᛂᛈᛞ:"
Page50 = ""
Page51 = "ᚹᚹᛈ•ᚠᛡᛚᛉᛒᚾ•ᚳᛗᚾᚱᛗ•ᚻᚦᚫᛞᛂ•ᛒᛡᚫ•ᛇᚹᛗᚢ•ᚪᛈᛡ•ᛈᛁᛂ•ᚪᚢᚾᛠᛖᛞᛗᚪ•ᛏᛟᛗ•ᛋᛞᛝᚷᛚᛋᛞᛝ•ᛟ•ᛋᛂᛞ•ᛚᛟᚠᛂᚫᚠᚪ•ᛝᛟᚣᛈ•ᚣᚩᛒᚷᚳᛖᛏᚹ•ᚪᛋᛒ•ᛗᛠᚣᛇᛗᚫᛚᚱ•ᚹᛇᛂᛒ•ᛈᛚᚠ"
Page52 = "ᛈ•ᚠᛗ•ᛝᚪᛇᚾᛟᚹᛇᛉ•ᚣᚫᛉᛞᛟᚱᛒ•ᛡᚱᛟ•ᚹᛏᚷᚱᛂᛖ•ᛠ•ᛈᛚᛞ•ᚻᚦᚱ•ᚦᚣᛚᛉ•ᛠᛈᚫᚠᚪ•ᚫᚪᛒ•ᛈᛋ•ᛗ•ᛏᚫᚳᛈᛝᚹᚦ•ᚻᛠ•ᛞᚩᛂᚷ•ᛋᚩᛠᚳᛖᛋ•ᚣᛖᚫ•ᛈᚦ•ᛁᛇᛈᚳᛝ.ᛈᚳᛇᚢᛏᚳᛡᛇᛝᚾᚢᚻᚦ•ᚣᚠᛗᚾ•ᛝᚠᛂᛉᛟᚱᛗ•ᛝᛠᛂᛏᚳ•ᚢᚷᚦ•ᚠᚦᛋ•ᚪᛈᚩᚪᚫᛞᛋᛝ•ᛒᛗᚩᚷ•ᚹᚠᛗᛖ•ᛠᛇᚻᚠᚻᚳᚱᚫ•ᛝᛗᛉᚳ•ᛋᚪᚹᛋᛠ•ᚩᚣᛚᛉᛝ•ᛠᛟᛉᛟᛠᛡᛝᛒ•ᛝᚳᚫᛁᚱ.ᛒᚠ•ᛏᚣᚣ•ᛠᛒ•ᚣᛚᚩ•ᛇᛉ•ᚩᚷᛗᚩ•ᚠᛚᛟᛝᚦᛠ•ᚦᚣᛖᚣ•ᚾᚷᚾ.ᛡᛏ•ᛂᛟᚾᛁ•ᛋᛟ•ᛠᚦᚣ•ᛋᛒ•ᚫᛚᚪᛂᛡᛖᚷᛉᛡᚾᛉᛏ•ᛡᛒᚻᛚᚷ•ᚢᚦᛠ•ᚢᚾᛁᚩᛗᛠᛁᚷ•ᛟᚦᚱᚣ•ᛒᛖᛠᚩᛈ•ᛗᛏᚱᚫᚢᚻᛁᛝ•ᛇᚳᚠ•ᛂᚾᚱᚷ•ᛟᚷᚻᚣᚻ"
Page53 = "ᛇᚫᛠᚫᚣ•ᚢᛗᛈ•ᛉᛁᚢᚾᚩᛟᚾ•ᚷᛞᚦ•ᛡᚫᚹ•ᛞᛟᛖᚱ•ᛗᚾᛖᚻᚷᛒᚢᛂ•ᚢᚦᛗᛖᛞᛝ•ᛒᚷᚣᚱ•ᛖᛁᚢᛂ•ᚣᛡᛚᚢ•ᛂᛟ.ᛠᛉᚣᛇᚱ•ᚩᛈᛋᚳᚫᛗᛇ•ᚾᛂ•ᛖᚠᛋ•ᛖᚠᚪᛝ•ᚢᛝᛂᛇᚷᚠᛝᚱᛁᚦ•ᛂᚢᚫ•ᚣᛋᚠᛖᚢᛋᚫᚣᛠ•ᛁᛏᛟᚱᛏᛟᚩ•ᚷᚾᚻ•ᛞᛗᚩᚳᛞᛖᛏ•ᚹᛉᛞᛚ•ᚩᚫᛂ•ᛇᚢᛒ•ᛗᛏ•ᛞᛗᛖ.ᛏᛈᚹᛇᛋ•ᚹᛒᛇᚦ•ᚾᚻᚷᛂ•ᚱᛡᛞᛡᚦᚪᛁᛇᚫᛉᛚ•ᛇᛠ•ᛡᚪᛂ•ᚻᚱ•ᚦᛈᛞᛂᛝᚩ•ᚷᚠᛇᛗᚳ•ᚻᛞᚩᛏᚳ•ᚢᚱ•ᛈᚾ:"
Page54 = "ᚪ•ᛗᛝᛞᛡᚦᛉᛁᛗ:ᛡᛞᛈᛝᚢᚹᚪᛗ•ᛏᚪᛝ•ᛝᚦᛡᚹᛋᚻ•ᛁᚳ•ᚫᛈᚫᚷᚩ•ᛗᛁᚪ•ᛖᚩ•ᛏᚹᚩ•ᚠᚣᚢᛏᛂ•ᚦᛂᛠᛖᚳᚾᛠ•ᚳᛠᛖ•ᚱᚩᚢᛉ•ᛞᚹᚻᛒᛝᚠᚪᚳᛂᚢ•ᚩᛂᛡᛠᛁᛚᚷᚻ•ᛒᚢᛂ•ᛉᚪᚳᚹᛡ•ᛗᚩᛈᚣᛞᛡᛚᛈ•ᛇᛁᚦᚱ•ᚣᚷᛗ•ᛉᛟᚷᛋ•ᛗᛈᛂᛟᛞ•ᛟᛏᛡᛟ•ᛏᛝᛁ•ᛗᛝᚣᚪᚫ•ᛝ•ᚱᚣᛂ•ᚾᛚᚢᛉᛒ•ᚻᛈᛂᚩᛠ•ᚷᚫᚹ•ᛉᛋᛞᚳ•ᚢᛏ•ᛟᚻᛇᚾᛈᛏ•ᛠᚣᛒᚢᚷ•ᚷᚪᛇ•ᚾᚷᚩᛖᛚᛗᛒᚦ•ᚣᛡᛟᛇᚣ•ᛗᚳᛟᚦ•ᛖᛚᚱᛇᛈᚱᛞᚣ•ᛉᛞ•ᛝᚣᛈ•ᛋᛖᛉᚹ•ᚳᚷᚠᛞᚱᛖ•ᛞᛖᚹᚩᛇᛟ•ᚻᚩᛟ•ᛒᛋ•ᚻᛠᚪᚳᛁᛗᛉᛂᛗᛖ•ᛗᛚ•ᚷᚩᛏᚦᛉᛖᛠᚱᚷᚣ"
Page55 = "ᛝ•ᚫᛗᛁᚹ•ᛋᛒ•ᛉᛗ•ᛋᛇᚷᛞᚦᚫ•ᚠᛡᚪᛒᚳᚢ•ᚹᚱ•ᛒᛠᚠᛉᛁᛗᚢᚳᛈᚻᛝᛚᛇ•ᛗᛋᛞᛡᛈᚠ•ᛒᚻᛇᚳ•ᛇᛖ•ᛠᛖᛁᚷᛉᚷᛋ•ᛖᛋᛇᚦᚦᛖᛋ•ᚦᛟ•ᚳᛠᛁᛗᚳᛉ•ᛞᛂᚢ•ᛒᛖᛁ:"
Page56 = "ᚫᛂ•ᛟᛋᚱ:ᛗᚣᛚᚩᚻ•ᚩᚫ•ᚳᚦᚷᚹ•ᚹᛚᚫ,ᛉᚩᚪᛈ•ᛗᛞᛞᚢᚷᚹ•ᛚ•ᛞᚾᚣᛂ•ᚳᚠᛡ•ᚫᛏᛈᛇᚪᚦ•ᚳᚫ:ᚳᛞ•ᚠᚾ•ᛡᛖ•ᚠᚾᚳᛝ•ᚱᚠ•ᚫᛁᚱᛞᛖ•ᛋᚣᛂᛠᚢᛝᚹ•ᛉᚩ•ᛗᛠᚹᚠ•ᚱᚷᛡ•ᛝᚱᛒ•ᚫᚾᚢᛋ:"
Page57 = ""

Pages27to32 = "ᛗᛈᚣ•ᛚᛋᚩᚪᚫᚻᛚᛖᛇᛁᛗᛚ•ᛚᛋᚳᛈ:ᚾᚻᚷᚢᛡᚻᚢ•ᛒᚠ•ᛞᛂᚢ•ᛒᛖᛁ•ᚫᚠ•ᛈ•ᚫᛈᚦ•ᚱᛗᛚᚳ•ᛒᚷᚣᛗᛠᛒᚫ•ᚾᚦ•ᛗᚠᛡᛠᚳᛒᚷᚫᚠ•ᛖᛂᚱᚩ•ᛈᛒ•ᚠᛒᚩ•ᛇᚱᛠᚱ•ᛠᚷᛖᛚ•ᛇᚱᚾᛋᚩᚩᚳᚪᛖᚣᛖᛖ•ᛏᚱ•ᚢᚣ•ᛟᛂᛉ•ᛠᚷᛝ•ᚣᛏᛝᚾ•ᚪᛏᛋ•ᛝᚪᛂ•ᚠᛚᛋᚢ•ᚹᛠᛈᛁᛏ•ᛁᚾ•ᚱᚱᛝᛗ•ᚣᛗᚠᛁᚫᛁᚪ•ᚢᛟᛒᚹ•ᛗᛁᚻᚣᚹᛞᛚ.ᛟᛏᛞ•ᛟᚳᛒ•ᛡᛒ•ᚪᛏ•ᚹᛏᛈ•ᚹᛠᚩᚱᚩᛖ•ᚣᛚᛋ.ᚢᛡᚱᚠᛂᛇᚱᛡᚦᛖᚢᛏ•ᛝᚫ•ᚾᚪᛠᚩᚪᚾᚪᚦᚷᚩ•ᚫᛉᛒᛏᛖᛠᛗᚷᚱᛗ•ᚣᛝᚠᛒ•ᛞᛟᛞᚪ•ᛠᚱᚳᛁᛈᛞᚠᛗᛝᚻ•ᛋᚩ•ᛞᛈᛉᚾ•ᛟᚱᛡᚾᚳᚳᛏ•ᚾᛈᚠᛈᚳ•ᛂᚦᛒᛁᚹ•ᛞᚹᛝᛠᛡᚹᛚ•ᚹᛂᚾᚪᛟ•ᛏᛞᛉᚣᛖᚱᛞ•ᚱᛏᛇᛁᚳᛈ•ᛝ•ᚦᛟᚷᛂᚦ•ᚣᛋ•ᛠᚻ•ᚠᛒᛚ•ᛁᚫᛚᛞᛉᚪ•ᛁᚹᚷ•ᛒᚩᚹᚾᛠ•ᛋᛖᛗᛒᛋ•ᚳᚹᚦᛟᚠᚻᚫ•ᛞᚢᛁᛒᛞ•ᛇᛝᛈᚠᛁ•ᛟᚢᚣᛏ•ᚻᚱᛖᚾᚳᛈᛡᛈᛞᛂ•ᛁᛏᛗᛋᚫᛉᚩᚣ•ᚪᛂᛗᛡᛖ•ᛇᛂᚠᛗᚱ.ᛞᛟᚪᛒᛞᚻ•ᚾᛈᚪ•ᛇᚱᚻᚾᛝᛠᚠᚾᚠ•ᚩᛗᛋᚾ•ᛠᚪᛁᚢᛚ•ᚪᚫ•ᛂᛉᛡᚠ•ᛁᛖᛈᛠᚻ•ᚠᛇᚩᚹ•ᛠᛂᛇᛁᛠᚫ•ᛂᛒ•ᛋ•ᚠᛖᚷ•ᛋᛁ•ᛟᛗᛒᛁᛝᛏᚪᚢᛁᚦ•ᚩᛝᛗᚠ•ᚹᛟᛒᛟᛡ•ᚠᚣᛝᚩᛠ•ᚳᛚᛈᚱ•ᛞᛂᚩᛝᛂ•ᚪᛖᛗᛈᚾ•ᚠᛠᚷᛞᛒ•ᚩᛉᚷᚾᚣᚷ•ᛠᛈᛂᛞᚾᛟᚩᚢᚾᚹᛗ.ᛂ•ᚢᚷᛠ•ᛗ•ᛇᚪ.ᚻᚦᛡ•ᛝᛈᛞᛒ•ᚳᛉᚳ•ᛠᛉ•ᛟᚣ•ᛒᚦᛁᛂᛚᛡᛝᛡ•ᚹᛂᚫ•ᛋᛗᚪᛡᛠᛇᛝᛏ•ᚦᛞᚷ•ᚢᛏᛚᛏᚣ•ᚢᛝ•ᚷᛟᚪᛏ•ᛂᚦᚣ•ᚫᚻᚪ•ᛒᛝ•ᚦᚢᚱᚪᚾᛞ•ᛁᛝᚫ•ᛚᚫᚷ•ᚹᛁᛒᚣ•ᚾᚫᚠ•ᛚᛋᛒ•ᛈᛟᚪᛟᛞᚷᛟᚣᛉᚷᛚ•ᛋᛠᛁ.ᚳᛟᛁᚦᛈᚹᛉ•ᛖᚢ•ᛟᛂᛝᛋᚢᛝ•ᚳᛡᛠ.ᛚᛇ•ᛚᚷᚢᛁᛏᛒᛋ•ᛞᛁ•ᚠᚠᚷᚠ•ᚦᛂᚳ•ᚫᛟ•ᛁᛗᛡᛁᛇᚦ•ᚩ•ᚢᛈᛒ•ᚻᛋ•ᛂᚣᛂᛖ.ᛒᛇᛇᚱ•ᚹᛂᛏᛡ•ᚳᚪᚫ.ᚩᛈᚱ•ᛡᚾᛗᛁᛝ•ᚻᚹᚦ•ᛡᚦᚻᚦ•ᛉᚫᚫᛋᚳᛡᚾᛇ•ᛟᛉᚢ•ᚱᛂᛖ•ᛚᚾᛞ•ᛗ•ᛏᚱᛟᚦ•ᛁᛝᛡᛒ•ᚳᚩᚹᛟ•ᛏᛗᛋᚱᚷ•ᚱᛚᛞᛚ•ᚩᚣ•ᛞᚳᚪᛖᛞᚠᚳ•ᛇᛖᛉᛚᚫ•ᛖᚩᛁᛋ•ᛡᛁᛟᛋᚪᛒᛗ•ᛗᚣᚹᛂ•ᛖᚫᛝᛚ•ᛂᚱᛇ•ᛈᛚᚩᚻ•ᚪᛞ•ᛡᛂ•ᛞᚠᚹᛞᛂᚳ•ᚾᚦᛉ•ᛂᚻ•ᚷᛚ•ᚠᛖᚦ•ᛇᚻ•ᛝᛖᛒᛚᛞᛁᛗᚠ•ᚹᛒᛗᛟᛁᛖᛁᛠ•ᛈᚻᛝᛖᛞᛟᚩᚻᛂ•ᚹᚩᚾᛂᛈᛗ•ᛖᚳ•ᛖᛇ•ᚷᚻᛗᛞᚪᛈᛖ•ᛗ•ᛉᚫᛒᛇᚱ•ᛖᚣᛟᚣ•ᚱᛠᛈᚢᛠ•ᚣᛖᚪᚻ•ᚩᛉᛠᚢᚻᛡᛟ•ᚷᚫᚩᛒᛉ•ᚫᚱᛞᛋᚩᚱ•ᚷᛠ•ᛉᚻᛁ•ᚷᚳᛞᛠᛡᚳ•ᛂᛠᛉᛇᚻᛋᚹ•ᛝᛡᚷᛖᛡᚣ•ᛠᚩᚷ•ᚱᚦᚠᛟᚩᚦ•ᚦᛁᛏᚱ•ᛇᛉᛇ•ᚢᚷᛠ•ᛟᛏ•ᚩᚠᛚ•ᛟᛝᛈ•ᚱᛡᚪᚩᛏ•ᚩᛠᚷᚫᛗ•ᛈᛋᚱ•ᛖᚦᚠ•ᛞᚹᚾᛚ•ᛝᚩᛇᛂ•ᚳᛚᚢᚹᛏ•ᚩᛖᛏᚠᚪᛚ•ᛟᛇᛟ•ᛠᚱᛇ•ᚢᚪᚦᛈᛟᛡᛉ.ᛡᛒᚱᛒᚠᚢᛚᚢᛟ•ᛒᛇᛒ•ᛉᚦᚹ•ᛝᚣᛖ•ᚳᚫᚣᛟ•ᚹᛁᛝᚫᛏ•ᚫᛇᛈᛡᛟᚠ•ᛚ•ᛝᚠᛡ.ᛞᚪᛚᛈ•ᛋᛁ•ᚢᚣᚪᛚᛠᛝᚹ•ᚪᛏᛈᚳᚣ•ᛝᚫᚻᛗᛞᚷᛚ.ᛠᛉᛒ•ᛇᛡᛋᛖ•ᚣᛁᛚ•ᚣᛠᚣ•ᚻ.ᚣᛉᚾᛏᚫᛉᛋᚦᚪᚹᛗ•ᚪᚱ•ᚪᚩᚻ.ᛗᛖᚫᛞᛠᛁᛗ•ᛒᛟᚾᚳᚩᚱᛉ•ᛋᚹᚫ•ᚻᛖ•ᛋᚠᚾ•ᚢᚦᛟᚷᛖᚪᛟᛇᛇ•ᚦᚳᛒᛝᛏᛉᛡᛞ•ᛋᛡ•ᚩᚠ.ᛈᛖᛞᛋᛁ•ᛚᛁᚻᚾᛝᚱ•ᚻᛈ•ᛇᚢᚫᛞ•ᛚᚻᛉᚳᛈ•ᛁᛗᛉᚳ.ᛂᚫᚾᛞᛋ•ᛏᛚᛡᚩᛋᛗ•ᛚᛞᚾ•ᛈᚫᛏᚷᛈ•ᚫᚦᛂᛗ•ᛒᚻᚩᚻᛁᚷᚻᚳ•ᛚᚹᛋᚱᛇᛗᛏ•ᛂᚳᛁ•ᛠᚦᛞ•ᛏᛚ•ᚱᛖᛠᛒᚪ•ᛒᚠᛒ•ᛁᛒᛡᛇᛏᚣ•ᛏᛖᚣᚳᚱᛋᚠ•ᛁᚦᚪᛉ•ᚪᚣᚫᛠ•ᛂ•ᛈᛗ•ᚠᛋ•ᚪᛒᚱ.ᛉᚣᚻ•ᚦᚩ•ᛇᛞᚢ.ᚠᛁ•ᚻᚩᚫᚠᚣᚷᚱᚪᛂ•ᛏᛉᛇ•ᛖᛠᛞ•ᛏᚠᚢᛝ•ᚫᛂᛖᛈᚳᛒᚦᚢᛝ•ᛡᛒᚹᚱ•ᛖᚾᛈᛇᚣᛇ•ᛉᚱᚹ•ᛒᛡᛞ•ᛖᚱᚩᚻᚣᛠᛈᚦ•ᛗᛁᚷᛚ•ᚹᛉᚫ.ᚠᛞᚾ•ᛂᛟ•ᚻᛚᛡ•ᛗᛖᚷ•ᛟᛁᛡ•ᚻᛟᚱᛇᚹᚣᚠ•ᛈ•ᛂᚷᚦ•ᚪᛒᛝ•ᛈᛒᚪᛖ•ᚢᚹᚻᚩᛒᛋᛉ•ᚹᛞ.ᚦᛇᚱᛖ•ᛂᚾᛞᛝᚹᚪ•ᚻᛖᚹ•ᛟᛡᛂᛡᛟᛝᛂᛉᛚᛂ•ᛞᛉᛟᛈ•ᚱᚪᛁᛏᚷᛉᛝᛇ•ᛠᛗᚩᛚ•ᚦᚫᚹ•ᚫᚢᛈᛡᚳ•ᚹᛝᚻᚹᛒᛗᛋᛟᛖᛁᛡ•ᛟᚹᚦᚻᛒ•ᛡᚱᛏᚦᚠ•ᚠᚩᚦ.ᚻᚩᛗᛖᛉᚹᛞᛋᛚᚠᛞ•ᛝᛒᛇᛡᛚᚪ•ᚹᛞᚾᚫᛉᛏᚣᛗᚷ•ᚦᚹᛉᛡᚦ•ᚹᛒᛋᚱᛉᛡᛉᚪ•ᚢᛒᚻᛠ•ᚹᛝᚢᚻᛇᛝᛡᛠᛂ•ᛋᛈᚦᛏ•ᛟᛝᚩᛗᛒᚢᛞᛋ•ᛒᛂ•ᛠᚱᛟ•ᛖᚾ•ᚾᚹᚷᚢᛚᚪᚩᚣ•ᚢᛏᚠᛂᛏ•ᚪᚷᛒᛇ:"

Page54to55 = "ᚪ•ᛗᛝᛞᛡᚦᛉᛁᛗ:ᛡᛞᛈᛝᚢᚹᚪᛗ•ᛏᚪᛝ•ᛝᚦᛡᚹᛋᚻ•ᛁᚳ•ᚫᛈᚫᚷᚩ•ᛗᛁᚪ•ᛖᚩ•ᛏᚹᚩ•ᚠᚣᚢᛏᛂ•ᚦᛂᛠᛖᚳᚾᛠ•ᚳᛠᛖ•ᚱᚩᚢᛉ•ᛞᚹᚻᛒᛝᚠᚪᚳᛂᚢ•ᚩᛂᛡᛠᛁᛚᚷᚻ•ᛒᚢᛂ•ᛉᚪᚳᚹᛡ•ᛗᚩᛈᚣᛞᛡᛚᛈ•ᛇᛁᚦᚱ•ᚣᚷᛗ•ᛉᛟᚷᛋ•ᛗᛈᛂᛟᛞ•ᛟᛏᛡᛟ•ᛏᛝᛁ•ᛗᛝᚣᚪᚫ•ᛝ•ᚱᚣᛂ•ᚾᛚᚢᛉᛒ•ᚻᛈᛂᚩᛠ•ᚷᚫᚹ•ᛉᛋᛞᚳ•ᚢᛏ•ᛟᚻᛇᚾᛈᛏ•ᛠᚣᛒᚢᚷ•ᚷᚪᛇ•ᚾᚷᚩᛖᛚᛗᛒᚦ•ᚣᛡᛟᛇᚣ•ᛗᚳᛟᚦ•ᛖᛚᚱᛇᛈᚱᛞᚣ•ᛉᛞ•ᛝᚣᛈ•ᛋᛖᛉᚹ•ᚳᚷᚠᛞᚱᛖ•ᛞᛖᚹᚩᛇᛟ•ᚻᚩᛟ•ᛒᛋ•ᚻᛠᚪᚳᛁᛗᛉᛂᛗᛖ•ᛗᛚ•ᚷᚩᛏᚦᛉᛖᛠᚱᚷᚣᛝ•ᚫᛗᛁᚹ•ᛋᛒ•ᛉᛗ•ᛋᛇᚷᛞᚦᚫ•ᚠᛡᚪᛒᚳᚢ•ᚹᚱ•ᛒᛠᚠᛉᛁᛗᚢᚳᛈᚻᛝᛚᛇ•ᛗᛋᛞᛡᛈᚠ•ᛒᚻᛇᚳ•ᛇᛖ•ᛠᛖᛁᚷᛉᚷᛋ•ᛖᛋᛇᚦᚦᛖᛋ•ᚦᛟ•ᚳᛠᛁᛗᚳᛉ•ᛞᛂᚢ•ᛒᛖᛁ:"





Page40to53 = Page40 + Page41 + Page42 + Page43 + Page44 + Page45 + Page46 + Page47 + Page48 + Page49 + Page50 + Page51 + Page52 + Page53
Page53Red = "ᛏᛈᚹᛇᛋ•ᚹᛒᛇᚦ•ᚾᚻᚷᛂ•ᚱᛡᛞᛡᚦᚪᛁᛇᚫᛉᛚ•ᛇᛠ•ᛡᚪᛂ•ᚻᚱ•ᚦᛈᛞᛂᛝᚩ•ᚷᚠᛇᛗᚳ•ᚻᛞᚩᛏᚳ•ᚢᚱ•ᛈᚾ"

pagelist = [Page0, Page1, Page2, Page3, Page4, Page5, Page6, Page7, Page8, Page9, Page10, Page11, Page12, Page13, Page14, Page15, Page16, Page17, Page18, Page19, Page20, Page21, Page22, Page23, Page24, Page25, Page26, Page27, Page28, Page29, Page30, Page31, Page32, Page33, Page34, Page35, Page36, Page37, Page38, Page39, Page40, Page41, Page42, Page43, Page44, Page45, Page46, Page47, Page48, Page49, Page50, Page51, Page52, Page53, Page54, Page55, Page56, Page57, Pages27to32, Page54to55,  Page40to53, Page53Red]


testseq = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811]
primeseq = [ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271]
p50decseq = [3, 3, 2, 54, 27, 3, 38, 51, 73, 42, 3, 71, 4, 51, 3, 3, 15, 1, 2, 1, 3, 2, 0, 2, 22, 2, 45, 1, 3, 13, 0, 1, 45, 5, 105, 0, 29, 3, 1, 3, 27, 0, 0, 1, 2, 42, 1, 1, 2, 25, 1, 3, 36, 0, 79, 0, 60, 3, 29, 2, 1, 1, 3, 2, 1, 2, 0, 1, 0, 3, 61, 2, 0, 1, 21, 62, 3, 0, 3, 1, 0, 0, 2, 28, 0, 1, 3, 0, 3, 19, 0, 60, 14, 52, 0, 1, 2, 3, 71, 0, 2, 0, 52, 3, 1, 0, 13, 0, 2, 61, 2, 1, 32, 2, 2, 28, 105, 41, 3, 13, 69, 0, 46, 2, 3, 1, 2, 70, 2, 2, 57, 14, 1, 0, 75, 73, 72, 59, 60, 1, 1, 0, 74, 72, 3, 62, 0, 2, 1, 3, 0, 43, 2, 2, 2, 14, 2, 1, 42, 0, 1, 12, 60, 2, 2, 45, 1, 2, 1, 1, 0, 30, 3, 24, 62, 1, 39, 0, 2, 6, 17, 26, 2, 75, 1, 61, 2, 0, 0, 0, 2, 0, 29, 73, 2, 0, 1, 2, 3, 3, 33, 3, 0, 41, 2, 2, 0, 3, 0, 0, 3, 60, 44, 2, 3, 48, 10, 57, 1]


line1 = "ᚪ•ᛗᛝᛞᛡᚦᛉᛁᛗ•ᛡᛞᛈᛝᚢᚹᚪᛗ•ᛏᚪ"
line2 = "ᚪ•ᛗᛝᛞᛡᚦᛉᛁᛗ•ᛡᛞᛈᛝᚢᚹᚪᛗ•ᛏᚪᛝ•ᛝᚦᛡᚹᛋᚻ•ᛁᚳ•ᚫᛈᚫᚷᚩ•ᛗᛁᚪ•ᛖᚩ•ᛏᚹᚩ•ᚠᚣᚢᛏᛂ•ᚦᛂᛠᛖᚳᚾᛠ•ᚳᛠᛖ•ᚱᚩᚢᛉ•ᛞᚹᚻᛒᛝᚠᚪᚳᛂᚢ•ᚩᛂᛡᛠᛁᛚᚷᚻ•ᛒᚢ"
uline1 = str.encode(line1, "utf-8")
uline2 = str.encode(line2, "utf-8")


stream = primeseq
stream = [97, 500, 508, 235, 286, 44, 269, 199, 74, 85, 204, 369, 189, 68, 423, 404, 101, 283, 536, 88, 191, 200, 323, 332, 169, 451, 79, 151, 213, 219, 137, 202, 62, 278, 293, 155, 330, 437, 172, 438, 136, 225, 186, 199, 306, 113, 114, 566, 144, 521, 222, 114, 118, 306, 283, 30, 596, 365, 138, 108, 341, 291, 88, 284, 129, 159]
stream = [102, 333, 313, 224, 247, 170, 350, 604, 90, 153, 74, 244, 403, 196, 239, 415, 513, 265, 479, 170, 376, 144, 126, 187, 293, 236, 280, 299, 73, 318, 77, 449, 97, 114, 126, 244, 228, 339, 144, 126, 169, 438, 102, 121, 83, 108, 110, 196, 184, 723, 472, 444, 189, 68, 58, 141, 287, 180, 255, 356, 134, 209, 100, 566, 468, 83, 79, 622, 148, 358, 78, 340, 181, 253, 134, 194, 288, 188, 272, 66, 151, 321, 228, 338, 300, 101, 143, 267, 216, 338, 125, 299, 481, 251, 54, 363, 170, 309, 241, 247, 157, 280, 168, 328, 274, 126, 143, 364, 152, 79, 304, 245, 255, 106, 137, 91, 538, 144, 143, 231, 245, 743, 344, 71, 134, 348, 193, 677, 16, 166, 361, 424, 132, 343, 102, 238, 244, 267, 401, 356, 428, 233, 450, 144, 30, 254, 117, 108, 134, 221, 144, 543, 294, 175, 73, 144, 283, 141, 134, 360, 123, 568, 264, 84, 488, 295, 5, 497, 404, 192, 532, 179, 85, 58, 519, 292, 568, 645, 164, 699, 377, 270, 571, 240, 171, 481, 220, 174, 211, 111, 101, 90, 36, 448, 97, 406, 151, 127, 371, 167, 461, 107, 171, 420, 47, 327, 69, 100, 124, 81, 319, 682, 48, 267, 208, 125, 317, 739, 245, 104, 324, 106, 486, 296, 289, 167, 581, 195, 423, 437, 516, 167, 252, 107, 300, 106, 440, 262, 115, 126, 74, 198, 454, 449, 286, 184, 103, 154, 334, 214, 412, 137, 194, 166, 475, 94, 413, 233, 241, 414, 124, 651, 170, 211, 70, 247, 492, 348, 237, 161, 123, 30, 182, 430, 506, 7, 199, 422, 283, 90, 234, 146, 366, 299, 120, 303, 142, 121, 68, 151, 353, 214, 175, 288, 520, 59, 84, 169, 208, 264, 153, 156, 165, 201, 86, 593, 320, 175, 454, 586, 545, 139, 82, 170, 139, 64, 407, 183, 187, 206, 284, 375, 174, 34, 113, 190, 50, 337, 399, 299, 225, 198, 239, 306, 98, 166, 84, 223, 527, 49, 179, 26, 146, 696, 465, 167, 213, 133, 276, 1055, 335, 266, 211, 300, 315, 92, 250, 305, 89, 182, 130, 113, 217, 256, 427, 237, 405, 86, 145, 180, 175, 143, 110, 39, 214, 137, 221, 205, 170, 122, 111, 427, 197, 405, 236, 632, 422, 413, 67, 345, 363, 74, 120, 374, 626, 504, 168, 284, 127, 315, 258, 147, 266, 163, 205, 322, 461, 209, 338, 242, 36, 180, 251, 61, 180, 321, 169, 117, 300, 623, 28, 280, 148, 286, 255, 291, 352, 256, 326, 223, 103, 129, 198, 159, 520, 339, 139, 527, 38, 374, 203, 197, 233, 204, 163, 17, 137, 325, 603, 156, 521, 195, 159, 149, 196, 185, 114, 228, 217, 161, 186, 130, 258, 635, 172, 156, 471, 96, 297, 556, 119, 239, 158, 181, 225, 227, 480, 3, 120, 387, 293, 229, 257, 286, 209, 193, 133, 137, 74, 382, 141, 153, 481, 369, 119, 61, 218, 193, 517, 104, 158, 44, 132, 448, 102, 256, 155, 300, 313, 199, 195, 104, 408, 265, 200, 312, 81, 319, 195, 255, 269, 134, 247, 111, 562, 213, 532, 83, 179, 395, 308, 346, 211, 580, 158, 161, 73, 436, 495, 201, 210, 109, 205, 39, 228, 352, 259, 96, 71, 319, 132, 150, 302, 271, 48, 666, 205, 330, 297, 25, 60, 566, 156, 159, 323, 210, 331, 309, 678, 298, 265, 170, 183, 88, 102, 351, 278, 241, 180, 136, 217, 114, 788, 281, 117, 298, 202, 287, 378, 56, 94, 704, 117, 229, 111, 227, 250, 308, 314, 192, 138, 286, 431, 329, 66, 122, 245, 305, 141, 594, 333, 69, 395, 228, 145, 105, 130, 442, 126, 106, 709, 150, 241, 34, 260, 144, 191, 14, 72]



skipseries = [59, 79, 47, 107, 11, 89, 101, 67, 97, 19, 17, 67, 5, 5, 73, 31, 43, 73, 103, 29, 43, 73, 53, 109, 3, 7, 47, 103, 19, 107, 97, 107, 37, 59, 7, 79, 67, 109, 11, 2, 5, 2, 61, 19, 79, 59, 29, 83, 97, 79, 7, 41, 97, 73, 37, 101, 83, 61, 19, 97, 37, 43, 107, 23, 107, 103, 103, 73, 43, 2, 103, 71, 53, 61, 2, 79, 11, 31, 107, 43, 73, 3, 103, 103, 73, 109, 61, 41, 2, 79, 59, 71, 59, 101, 73, 13, 79, 41, 41, 83, 11, 7, 53, 53, 23, 107, 67, 59, 37, 19, 2, 29, 7, 47, 3, 83, 43, 83, 31, 109, 109, 73, 19, 83, 11, 83, 41, 7, 103, 7, 19, 53, 11, 59, 13, 61, 19, 83, 103, 67, 97, 83, 43, 61, 61, 53, 11, 11, 2, 67, 43, 61, 83, 107, 71, 29, 7, 53, 2, 71, 107, 61, 79, 79, 103, 53, 109, 43, 71, 83, 29, 79, 29, 29, 59, 47, 17, 59, 83, 79, 29, 53, 13, 67, 11, 19, 103, 11, 71, 7, 97, 109, 79, 59, 53, 97, 71, 61, 23, 103, 29, 31, 31, 79, 101, 11, 11, 7, 107, 37, 13, 11, 3, 29, 13, 79, 101, 17, 61, 73, 67, 43]








AssignedPage = ""
VigstreamPage = ""

def vigstream():
        tline1 = ""
        conter = 0
        fconter = 0
        reverseline = [0] * len(stream)
        for x in range(0,len(stream)):
                reverseline[len(stream) - x - 1] = stream[x]



        
        for x in range(0, len(VigstreamPage)):
                for item in runelist:
                        if VigstreamPage[x] == SPACE.Icon or VigstreamPage[x] == ":" :
                                tline1 = tline1 + "|" + SPACE.English
                                break
                            
                        elif VigstreamPage[x] == item.Icon:
                                tline1 = tline1 + "|" + runelist[(item.Shift - (stream[conter % (len(stream))])) % 29].English
                                conter = conter + 1

                                if item.English == "F":
                                        fconter = fconter + 1
                                        tline1 = tline1 +  "|" + '\033'#[0m'
                                break
                                

                                
        print (tline1)
        penis = input("WHAT?" + str(fconter))
        
        return 0

def skipstream():
        tline1 = ""
        tline2 = ""
        skiparray = []
        streamcount = 0
        spacelessSource = ""
        for z in range(0, len(ShiftSource)):
            if ShiftSource[z] != SPACE.Icon and ShiftSource[z] != ":":
                spacelessSource = spacelessSource + ShiftSource[z]
        
        
        
        
        for x in range(0, len(AssignedPage)):
                for item in runelist:
                        if AssignedPage[x] == SPACE.Icon:
                                tline1 = tline1 + "|" + SPACE.English
                                break
                        if AssignedPage[x] == item.Icon:
                            print(len(spacelessSource))
                            for y in runelist:
                                if spacelessSource[(stream[x] % len(spacelessSource))] == y.Icon:   #list out of range if spaceless > stream FYI
                                    tline1 = tline1 + "|" + y.English
                                    tline2 = tline2 + str(y.Gematria) + ", "
                                    if len(skiparray) > 0:
                                        skiparray.append(skiparray[-1] + y.Gematria)
                                    else :
                                        skiparray.append(y.Gematria)
                                    break
        print (tline1)
        print (tline2)
        print(skiparray[-1])
        carryon = input("Now you can test if those letters can be used to shift the original p54")
        
        tline1 = ""
        conter = 0
        fconter = 0

        for x in range(0, len(VigstreamPage)):
                for item in runelist:
                        if VigstreamPage[x] == SPACE.Icon or VigstreamPage[x] == ":" :
                                tline1 = tline1 + "|" + SPACE.English
                                break
                            
                        elif VigstreamPage[x] == item.Icon:
                                print ("DEBUG:" + str(conter) + "|" +str(item.Shift) + " - " + str((skiparray[conter % (len(skipseries))] - 1)% 29) + "::" + str(item.Shift - (skipseries[conter % (len(skipseries))])-1) )
                                tline1 = tline1 + "|" + runelist[(item.Shift + (skiparray[conter % (len(skiparray))] -1 % 29)) % 29].English
                                conter = conter + 1

                                if item.English == "F":
                                        fconter = fconter + 1
                                        tline1 = tline1 +  "|" + '\033'#[0m'
                                break
        print (tline1)
        return 0

def convgematria():
        print ("Gematria List")
        seriesstring = ""
        germcount = 0
        wordcounter = 0
        sumstream = 0
        for x in AssignedPage:
                for item in runelist:
                        if x == item.Icon:
                                germcount = germcount + item.Gematria
                                print (item.Gematria)
                                break
                        elif x == SPACE.Icon or x == ":":
                                seriesstring = seriesstring + str(germcount) + ", "
                                sumstream = sumstream + germcount
                                germcount = 0
                                wordcounter = wordcounter +1
                                break
                        
        print (seriesstring)
        print ("\n\n" + "words: " + str(wordcounter))
        


        print ("sum of words: " + str(sumstream))
        
        


def countglyphs():
        glyphcount = 0
        for x in AssignedPage:
                for item in runelist:
                        if x == item.Icon:
                                glyphcount = glyphcount + 1
                                break
        print (glyphcount)
                                
                                
def theorysel():
        theorymode = input("Some theories suggest you do the following to the runes beforehand:\n1: Reverse Runes\n2: Reverse Stream\n3: Skip first letter\n4: Totient of streams (-1 for primes)\n9: DONE\n\n")
        if theorymode == "1":
            print("Runes Reversed (TBI)")
            reverseline = ""
            global VigstreamPage
            for x in VigstreamPage:
                reverseline =x + reverseline
            VigstreamPage = reverseline
            
            theorysel()
        if theorymode == "2":
            print("Stream/Shift Reversed (TBI)")
            revline = ""
            global ShiftSource
            for x in ShiftSource:
                revline = x + revline
            ShiftSource = revline
            theorysel()
        if theorymode == "3":
            stream.insert(0, 0)
            print(stream)
            theorysel()            
        if theorymode == "4":
            for x in range(0, len(stream)):
                stream[x] = stream[x] - 1
            theorysel()                                       

curtext = []

textsel = input("Pages [0-57]\nPage 27 to 32 [58]\nPage 54 to 55 [59]\nSelect page to be decrypted:\n")
filename = ("p" + str(textsel))
print ("\n" + "Page " + str(textsel))
#print (Page0)
AssignedPage = Pages27to32
VigstreamPage = Page54to55
ShiftSource = Pages27to32

AssignedPage = pagelist[int(textsel)]
VigstreamPage = pagelist[int(textsel)]

#VigstreamPage = Page56
#with open(filename, "r") as f:
#f = open(filename, "r")
#        content = str.decode(f.readlines(), "utf-8")
#        curtext = "".join(content)
#        curtext = curtext.replace("\n","")
#for line in content:
#    print (line,)
#print ("\n")

#print (curtext)
#line1 = curtext
#uline1 = str.encode(line1, "utf-8")
#uline2 = str.encode(line1, "utf-8")


decryptmode = input("Select decypher mode: \n1: Vig and Stream Cypher\n2: Skip and Stream Cypher\n3:Convert to Gematria\n")
print (decryptmode)

theorysel()



if decryptmode == "1":
        vigstream()
#       streammode = input("Select stream sequence:\n1: Fibonacci Sequence\n2: Prime Sequence\n3: Page 50 Hex to Decimal Sequence \n4: Count Glyphs in page 54-55\n")
#        if streammode == "1":
#                vigstream()
 #       if streammode == "2":
  #              stream = primeseq
#               vigstream()
#       if streammode == "3":
#               stream = p50decseq
#               vigstream()

elif decryptmode == "2":
        streammode= input("Select stream sequence:\n1: Fibonacci Sequence\n2: Prime Sequence\n3: Page 50 Hex to Decimal Sequence \n")
        if streammode == "1":
               skipstream()
#       if streammode ==2:
#               stream = primeseq
#               skipstream()
#       if streammode ==3:
#               stream = p50decseq
#               skipstream()

elif decryptmode == "3":
        convgematria()

elif decryptmode == "4":
        countglyphs()

else:
        print ("UYUUY")

        
        


